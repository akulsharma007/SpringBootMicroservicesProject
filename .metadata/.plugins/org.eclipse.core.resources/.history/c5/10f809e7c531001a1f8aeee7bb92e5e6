package com.akul.moviecatalogservice.resources;

import com.akul.moviecatalogservice.models.CatalogItem;
import com.akul.moviecatalogservice.models.Movie;
import com.akul.moviecatalogservice.models.Rating;
import com.akul.moviecatalogservice.models.UserRating;
import com.akul.moviecatalogservice.service.MovieInfo;
import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogResource {

	private MovieInfo data = new MovieInfo();

	@RequestMapping("/{id}")
	public List<CatalogItem> getCatalog(@PathVariable("id") String id){
		UserRating listObject = getUserRating(id);
		return listObject.getUserRating().stream()
				.map(rating-> getCatalogItem(rating))
				.collect(Collectors.toList());
	}

	@HystrixCommand(fallbackMethod = "getFallbackCatalogItem")
	private CatalogItem getCatalogItem(Rating rating) {
		Movie movie = data.restTemplate.getForObject("http://movie-info-service/movies/"+rating.getMovieId(), Movie.class);
		return new CatalogItem(movie.getName(), movie.getDescription(), rating.getRating());
	}

	@HystrixCommand(fallbackMethod = "getFallbackUserRating")
	private UserRating getUserRating(String id) {
		UserRating listObject = data.restTemplate.getForObject("http://ratings-data-service/ratingsdata/user/"+id, UserRating.class);
		return listObject;
	}
	
	public static CatalogItem getFallbackCatalogItem(Rating rating){
		return new CatalogItem("No Movie found","",rating.getRating());
	}
	
	public static UserRating getFallbackUserRating(String id){
		UserRating ur = new UserRating();
		ur.setUserId(id);
		ur.setUserRating(Arrays.asList(new Rating("0",0)));
		return ur;
	}
}
